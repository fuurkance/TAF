class CfgSkeletons
{
	class Default
	{
		isDiscrete=1;
		skeletonInherit="";
		skeletonBones[]={};
	};
	class GWS_HK416_BASE: Default
	{
		skeletonBones[]=
		{
			"magazine","",
			"bolt","",
			"backsight","",
			"frontsight","",
			"safety","",
			"muzzleFlash","",
			"trigger","",
			"chargingHandle","",
			"OP",""
		};
	};

};
class CfgModels
{
	class Default
	{
		sectionsInherit="";
		sections[]={};
		skeletonName="";
	};

	class GWS_HK416_BASE: Default
	{
		sections[]=
		{
			"zasleh"
		};
		skeletonName="GWS_HK416_BASE";
		class Animations
		{
			class chargingHandle
			{
				type="translationX";
				source="reloadMagazine";
				selection="chargingHandle";
				axis="charging_axis";
				animPeriod=1;
				memory=1;
				minValue="0";
				maxValue="0.06";
				angle0="0";
				angle1="0.06";
			};
			
			/*class backsight 
			{
				type = "rotation";
				source = "hasOptics";
				sourceAddress = "clamp";
				selection = "backsight";
				axis = "backsight_axis";
				minValue = 0;
				maxValue = "1";
				angle0 = "0";
				angle1 = "rad -90";
			};
			
			class frontsight 
			{
				type = "rotation";
				source = "hasOptics";
				sourceAddress = "clamp";
				selection = "frontsight";
				axis = "frontsight_axis";
				minValue = 0;
				maxValue = "1";
				angle0 = "0";
				angle1 = "rad -90";
			};*/
			
			class BackSight_optic
			{
				type="rotation";
				source="hasOptics";
				selection="BackSight";
				axis="BackSight_axis";
				memory=1;
				minValue=0.0000000;
				maxValue=1.0000000;
				angle0=0.000000;
				angle1=(rad -90);
			};
			class Frontsight_optic: BackSight_optic
			{
				selection="Frontsight";
				axis="Frontsight_axis";
				angle1=(rad -90);
			};
			
			class zaslehROT
			{
				type="rotation";
				source="clockMinute";
				sourceAddress="loop";
				selection="zasleh";
				begin="usti hlavne";
				end="konec hlavne";
				memory=1;
				minValue=0.0166665;
				maxValue=0.016666666666666666666666666666667;
				angle0="rad 0";
				angle1="rad 360";
			};
			class muzzleFlashROT
			{
				type="rotationX";
				source="ammoRandom";      //use ammo count as phase for animation
				sourceAddress="loop";     //loop when phase out of bounds
				selection="muzzleFlash";  //selection we want to rotate
				axis="";                  //no own axis - center of rotation is computed from selection
				centerFirstVertex=true;   //use first vertex of selection as center of rotation
				minValue=0;
				maxValue=4;               //rotation angle will be 360/4 = 90 degrees
				angle0="rad 0";
				angle1="rad 360";
			};
			/// Hiding of magazine if weapon has none
			class no_magazine
			{
				type="hide";
				source="hasMagazine";
				selection="magazine";
				minValue=0.000000;
				maxValue=1.00000;
				hideValue=0.5;
				unhideValue = -1.0;
			};		
			class trigger 
			{
				type = "rotation";
				source = "reload";
				sourceAddress = "clamp";
				selection = "trigger";
				axis = "trigger_axis";
				minValue = 0;
				maxValue = "1";
				angle0 = "0";
				angle1 = "rad -20";
			};
			// Rotation of fire mode switch
			class safety_mode_rot
			{
				type			= rotation;
				source			= weaponMode;
				selection		= "safety";
				axis			= "safety_axis";
				memory			= 1;
				minValue		= 0;
				maxValue		= 0.25;
				angle0			= 0;
				angle1			= (rad -100);
			};
			class reload_magazine_hide
			{
				type="hide";
				source="reloadMagazine";
				selection="magazine";
				minValue=-0.40000001;
				maxValue=0.40000001;
				minPhase=-0.40000001;
				maxPhase=0.40000001;
				hideValue=0.75;
				sourceAddress="mirror";
			};
			class bolt
			{
				type="translation";
				source="reload";
				selection="bolt";
				axis="bolt_axis";
				memory = 1;
				minValue=0;
				maxValue="1";
				offset0="0";
				offset1="1";
			};
			class bolt_empty: bolt{
				source = "isEmptyNoReload";
				minValue = 0;
				maxValue = 1;
				offset0 = 0;
				offset1 = 1;
			};
			
			class bolt_reload_move_1: bolt_empty {
				source="reloadMagazine";	// z: should work like that only if weapon is empty
				minValue=0;
				maxValue=0.00001;
			};
			class bolt_reload_move_2: bolt_reload_move_1 {
				source="reloadMagazine";	// z: should work like that only if weapon is empty
				minValue=0.78;
				maxValue=0.80;
				offset1 = -1;
			};
			
			class unloaded_magazine_hide {
				type = "hide";
				source = "hasMagazine";
				selection = "magazine";
				hideValue = 0.1;
			};
			
			class OP_ROT {
                type="rotationZ";
                source="weaponMuzzle";
                memory=1;
                selection="OP";
                animPeriod=1;
                axis="OP_axis";
                minValue=0.0;
                maxValue=1.0;
                minPhase=0.0;
                maxPhase=1.0;
                angle0=0.0;
                angle1="rad 95";
            };
			
		};
	};
	

	
	class GWS_HK416: GWS_HK416_BASE{};



};
